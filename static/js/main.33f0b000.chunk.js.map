{"version":3,"sources":["img/LaLiga.png","img/Bundesliga.png","img/Eredivisie.png","img/Ligue1.png","img/PremierLeague.png","img/SerieA.png","components/Header.js","components/Button.js","components/Row.js","components/TableBody.js","components/LeagueInfo.js","containers/App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","react_default","a","createElement","children","Button","onClick","handleClick","data-leagueid","leagueId","text","Row","className","position","src","crestURI","alt","teamName","playedGames","wins","draws","losses","goalsFor","goalsAgainst","goalDifference","points","TableBody","title","LeagueInfo","imgSrc","leagueCaption","Bundesliga","Eredivisie","LaLiga","Ligue1","PremierLeague","SerieA","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","leagueName","rows","leagues","La Liga","Premier League","Ligue 1","Serie A","buttons","handleLeagueClick","bind","assertThisInitialized","e","_this2","newId","target","getAttribute","setState","fetchData","_this3","fetch","headers","X-Auth-Token","then","response","json","responseJson","standings","table","map","item","index","won","draw","lost","_item$team","team","crestUrl","name","push","components_Row","key","competition","catch","error","console","components_Button","components_Header","components_LeagueInfo","components_TableBody","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","ReactDOM","render","src_containers_App","document","getElementById","URL","process","origin","addEventListener","concat","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"2EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6OCUzBC,SARA,SAACC,GACZ,OACIC,EAAAC,EAAAC,cAAA,cACKH,EAAMI,YCKJC,EARA,SAACL,GACZ,OACIC,EAAAC,EAAAC,cAAA,UAAQG,QAASN,EAAMO,YAAaC,gBAAeR,EAAMS,UACpDT,EAAMU,OCqCJC,EAxCH,SAACX,GACT,OACIC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIS,UAAU,iBACTZ,EAAMa,UAEXZ,EAAAC,EAAAC,cAAA,MAAIS,UAAU,aACVX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,SACXX,EAAAC,EAAAC,cAAA,OAAKW,IAAKd,EAAMe,SAAUC,IAAI,MAElCf,EAAAC,EAAAC,cAAA,YAAOH,EAAMiB,WAEjBhB,EAAAC,EAAAC,cAAA,UACKH,EAAMkB,aAEXjB,EAAAC,EAAAC,cAAA,UACKH,EAAMmB,MAEXlB,EAAAC,EAAAC,cAAA,UACKH,EAAMoB,OAEXnB,EAAAC,EAAAC,cAAA,UACKH,EAAMqB,QAEXpB,EAAAC,EAAAC,cAAA,UACKH,EAAMsB,UAEXrB,EAAAC,EAAAC,cAAA,UACKH,EAAMuB,cAEXtB,EAAAC,EAAAC,cAAA,UACKH,EAAMwB,gBAEXvB,EAAAC,EAAAC,cAAA,MAAIS,UAAU,eACTZ,EAAMyB,UCQRC,EA1CG,SAAC1B,GACf,OACIC,EAAAC,EAAAC,cAAA,SAAOS,UAAU,aACbX,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,MAAIS,UAAU,cACVX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,iBAAd,KAGAX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,aAAd,QAGAX,EAAAC,EAAAC,cAAA,MAAIwB,MAAM,kBAAV,MAGA1B,EAAAC,EAAAC,cAAA,MAAIwB,MAAM,QAAV,KAGA1B,EAAAC,EAAAC,cAAA,MAAIwB,MAAM,SAAV,KAGA1B,EAAAC,EAAAC,cAAA,MAAIwB,MAAM,UAAV,KAGA1B,EAAAC,EAAAC,cAAA,MAAIwB,MAAM,aAAV,MAGA1B,EAAAC,EAAAC,cAAA,MAAIwB,MAAM,iBAAV,MAGA1B,EAAAC,EAAAC,cAAA,MAAIwB,MAAM,oBAAV,MAGA1B,EAAAC,EAAAC,cAAA,MAAIwB,MAAM,eAAV,QAIH3B,EAAMI,+GCURwB,EAxCI,SAAC5B,GAChB,IAAI6B,EACJ,OAAQ7B,EAAM8B,eAEV,IAAK,aACDD,EAASE,IACT,MAEJ,IAAK,aACDF,EAASG,IACT,MAEJ,IAAK,mBACDH,EAASI,IACT,MAEJ,IAAK,UACDJ,EAASK,IACT,MAEJ,IAAK,iBACDL,EAASM,IACT,MAEJ,IAAK,UACDN,EAASO,IACT,MAEJ,QACIP,EAASI,IAIjB,OACIhC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,eACXX,EAAAC,EAAAC,cAAA,OAAKW,IAAKe,EAAQb,IAAI,OCoDnBqB,cArFb,SAAAA,EAAYrC,GAAO,IAAAsC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMzC,KACD6C,MAAQ,CACXC,WAAY,UACZC,KAAM,GACNtC,SAAU,KACVuC,QAAS,CACPC,UAAW,KACXC,iBAAkB,KAClBlB,WAAc,MACdmB,UAAW,MACXpB,WAAc,MACdqB,UAAW,MAEbC,QAAS,IAEXf,EAAKgB,kBAAoBhB,EAAKgB,kBAAkBC,KAAvBhB,OAAAiB,EAAA,EAAAjB,QAAAiB,EAAA,EAAAjB,CAAAD,KAhBRA,iFAmBDmB,GAAG,IAAAC,EAAAjB,KACbkB,EAAQF,EAAEG,OAAOC,aAAa,iBACpCpB,KAAKqB,SAAS,CACZrD,SAAUkD,GACT,WAAQD,EAAKK,kDAGN,IAAAC,EAAAvB,KAERhC,EAAWgC,KAAKI,MAAMpC,SAGxBwD,MAFQ,gDAAkDxD,EAAW,aAE1D,CAAEyD,QAAS,CAAEC,eAJV,sCAKXC,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAACG,GACL,IAAMxB,EAAO,GACbwB,EAAaC,UAAU,GAAGC,MAAMC,IAC9B,SAACC,EAAMC,GAAU,IACP/D,EAA2F8D,EAA3F9D,SAAUK,EAAiFyD,EAAjFzD,YAAa2D,EAAoEF,EAApEE,IAAKC,EAA+DH,EAA/DG,KAAMC,EAAyDJ,EAAzDI,KAAMzD,EAAmDqD,EAAnDrD,SAAUC,EAAyCoD,EAAzCpD,aAAcC,EAA2BmD,EAA3BnD,eAAgBC,EAAWkD,EAAXlD,OADzEuD,EAEUL,EAAKM,KAAvBC,EAFQF,EAERE,SAAUC,EAFFH,EAEEG,KAEjB,OACEpC,EAAKqC,KACHnF,EAAAC,EAAAC,cAACkF,EAAD,CAAKC,IAAKV,EAAO/D,SAAUA,EAAUE,SAAUmE,EAAUjE,SAAUkE,EAAMjE,YAAaA,EAAaC,KAAM0D,EAAKzD,MAAO0D,EAAMzD,OAAQ0D,EAAMzD,SAAUA,EAAUC,aAAcA,EAAcC,eAAgBA,EAAgBC,OAAQA,OAKzOuC,EAAKF,SAAS,CACZhB,WAAYyB,EAAagB,YAAYJ,KACrCpC,KAAMA,MAGTyC,MAAM,SAACC,GACNC,QAAQD,MAAMA,iDAMlB,IAAK,IAAIH,KADT7C,KAAKsB,YACWtB,KAAKI,MAAMG,QACzBP,KAAKI,MAAMQ,QAAQ+B,KACjBnF,EAAAC,EAAAC,cAACwF,EAAD,CAAQpF,YAAakC,KAAKa,kBAAmBgC,IAAK7C,KAAKI,MAAMG,QAAQsC,GAAM7E,SAAUgC,KAAKI,MAAMG,QAAQsC,GAAM5E,KAAM4E,sCAOxH,OACErF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,OACbX,EAAAC,EAAAC,cAACyF,EAAD,KACGnD,KAAKI,MAAMQ,SAEdpD,EAAAC,EAAAC,cAAA,OAAKS,UAAU,aACbX,EAAAC,EAAAC,cAAC0F,EAAD,CAAY/D,cAAeW,KAAKI,MAAMC,aACtC7C,EAAAC,EAAAC,cAAC2F,EAAD,KACGrD,KAAKI,MAAME,eA9ENgD,aCEZC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTnC,KAAK,SAAAuC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBhE,QACf2D,UAAUC,cAAcO,WAK1BtB,QAAQuB,IAAI,6CAKZvB,QAAQuB,IAAI,2CAMrBzB,MAAM,SAAAC,GACLC,QAAQD,MAAM,4CAA6CA,KChEjEyB,IAASC,OAAOlH,EAAAC,EAAAC,cAACiH,EAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBd,UAAW,CAGzE,GADkB,IAAIe,IAAIC,kBAAwBtB,OAAOC,UAC3CsB,SAAWvB,OAAOC,SAASsB,OAIvC,OAGFvB,OAAOwB,iBAAiB,OAAQ,WAC9B,IAAMnB,EAAK,GAAAoB,OAAMH,kBAAN,sBAENxB,EAwCX,SAAiCO,GAE/BtC,MAAMsC,GACHnC,KAAK,SAAAC,GAGkB,MAApBA,EAASuD,SACuD,IAAhEvD,EAASH,QAAQ2D,IAAI,gBAAgBC,QAAQ,cAG7CtB,UAAUC,cAAcsB,MAAM3D,KAAK,SAAAuC,GACjCA,EAAaqB,aAAa5D,KAAK,WAC7B8B,OAAOC,SAAS8B,aAKpB3B,EAAgBC,KAGnBf,MAAM,WACLE,QAAQuB,IACN,mEAzDAiB,CAAwB3B,GAHxBD,EAAgBC,MC7BxB4B","file":"static/js/main.33f0b000.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LaLiga.2be24290.png\";","module.exports = __webpack_public_path__ + \"static/media/Bundesliga.3e055fb4.png\";","module.exports = __webpack_public_path__ + \"static/media/Eredivisie.07239886.png\";","module.exports = __webpack_public_path__ + \"static/media/Ligue1.4b2af31f.png\";","module.exports = __webpack_public_path__ + \"static/media/PremierLeague.2ea36f1c.png\";","module.exports = __webpack_public_path__ + \"static/media/SerieA.3ee74dc2.png\";","import React from 'react';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header>\r\n            {props.children}\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <button onClick={props.handleClick} data-leagueid={props.leagueId}>\r\n            {props.text}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\n\r\nconst Row = (props) => {\r\n    return (\r\n        <tr>\r\n            <td className=\"team-position\">\r\n                {props.position}\r\n            </td>\r\n            <td className=\"team-name\">\r\n                <div className=\"crest\">\r\n                    <img src={props.crestURI} alt=\"\"/>\r\n                </div>\r\n                <span>{props.teamName}</span>\r\n            </td>\r\n            <td>\r\n                {props.playedGames}\r\n            </td>\r\n            <td>\r\n                {props.wins}\r\n            </td>\r\n            <td>\r\n                {props.draws}\r\n            </td>\r\n            <td>\r\n                {props.losses}\r\n            </td>\r\n            <td>\r\n                {props.goalsFor}\r\n            </td>\r\n            <td>\r\n                {props.goalsAgainst}\r\n            </td>\r\n            <td>\r\n                {props.goalDifference}\r\n            </td>\r\n            <td className=\"team-points\">\r\n                {props.points}\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default Row;","import React from 'react'\r\n\r\nconst TableBody = (props) => {\r\n    return (\r\n        <table className=\"standings\">\r\n            <tbody>\r\n                <tr className=\"table-head\">\r\n                    <td className=\"team-position\">\r\n                        #\r\n                    </td>\r\n                    <td className=\"team-name\">\r\n                        Team\r\n                    </td>\r\n                    <td title=\"Matches played\">\r\n                        MP\r\n                    </td>\r\n                    <td title=\"Wins\">\r\n                        W\r\n                    </td>\r\n                    <td title=\"Draws\">\r\n                        D\r\n                    </td>\r\n                    <td title=\"Losses\">\r\n                        L\r\n                    </td>\r\n                    <td title=\"Goals for\">\r\n                        GF\r\n                    </td>\r\n                    <td title=\"Goals against\">\r\n                        GA\r\n                    </td>\r\n                    <td title=\"Goals difference\">\r\n                        GD\r\n                    </td>\r\n                    <td title=\"Team points\">\r\n                        Pts\r\n                    </td>\r\n                </tr>\r\n                {props.children}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default TableBody","import React from 'react';\r\nimport Bundesliga from '../img/Bundesliga.png';\r\nimport Eredivisie from '../img/Eredivisie.png';\r\nimport LaLiga from '../img/LaLiga.png';\r\nimport Ligue1 from '../img/Ligue1.png';\r\nimport PremierLeague from '../img/PremierLeague.png';\r\nimport SerieA from '../img/SerieA.png';\r\n\r\nconst LeagueInfo = (props) => {\r\n    let imgSrc;\r\n    switch (props.leagueCaption) {\r\n\r\n        case \"Bundesliga\":\r\n            imgSrc = Bundesliga;\r\n            break;\r\n\r\n        case \"Eredivisie\":\r\n            imgSrc = Eredivisie;\r\n            break;\r\n\r\n        case \"Primera Division\":\r\n            imgSrc = LaLiga;\r\n            break;\r\n\r\n        case \"Ligue 1\":\r\n            imgSrc = Ligue1;\r\n            break;\r\n\r\n        case \"Premier League\":\r\n            imgSrc = PremierLeague;\r\n            break;\r\n\r\n        case \"Serie A\":\r\n            imgSrc = SerieA;\r\n            break;\r\n\r\n        default:\r\n            imgSrc = LaLiga;\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <div className=\"league-info\">\r\n            <img src={imgSrc} alt=\"\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LeagueInfo;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Header from '../components/Header';\r\nimport Button from '../components/Button';\r\nimport Row from '../components/Row';\r\nimport TableBody from '../components/TableBody';\r\nimport LeagueInfo from '../components/LeagueInfo';\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      leagueName: 'La Liga',\r\n      rows: [],\r\n      leagueId: 'PD',\r\n      leagues: {\r\n        \"La Liga\": 'PD',\r\n        \"Premier League\": 'PL',\r\n        \"Eredivisie\": 'DED',\r\n        \"Ligue 1\": 'FL1',\r\n        \"Bundesliga\": 'BL1',\r\n        \"Serie A\": 'SA'\r\n      },\r\n      buttons: []\r\n    }\r\n    this.handleLeagueClick = this.handleLeagueClick.bind(this);\r\n  }\r\n\r\n  handleLeagueClick(e) {\r\n    const newId = e.target.getAttribute('data-leagueid');\r\n    this.setState({\r\n      leagueId: newId\r\n    }, () => { this.fetchData() });\r\n  }\r\n\r\n  fetchData() {\r\n    const Token = 'b7d52e61c66f4a0194be725042ad4359',\r\n      leagueId = this.state.leagueId,\r\n      URL = 'http://api.football-data.org/v2/competitions/' + leagueId + '/standings';\r\n\r\n    fetch(URL, { headers: { 'X-Auth-Token': Token } })\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        const rows = [];\r\n        responseJson.standings[0].table.map(\r\n          (item, index) => {\r\n            const { position, playedGames, won, draw, lost, goalsFor, goalsAgainst, goalDifference, points } = item;\r\n            const {crestUrl, name} = item.team;\r\n            \r\n            return (\r\n              rows.push(\r\n                <Row key={index} position={position} crestURI={crestUrl} teamName={name} playedGames={playedGames} wins={won} draws={draw} losses={lost} goalsFor={goalsFor} goalsAgainst={goalsAgainst} goalDifference={goalDifference} points={points} />\r\n              )\r\n            )\r\n          }\r\n        )\r\n        this.setState({\r\n          leagueName: responseJson.competition.name,\r\n          rows: rows\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n    for (let key in this.state.leagues) {\r\n      this.state.buttons.push(\r\n        <Button handleClick={this.handleLeagueClick} key={this.state.leagues[key]} leagueId={this.state.leagues[key]} text={key} />\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div className=\"app\">\r\n        <Header>\r\n          {this.state.buttons}\r\n        </Header>\r\n        <div className=\"container\">\r\n          <LeagueInfo leagueCaption={this.state.leagueName} />\r\n          <TableBody>\r\n            {this.state.rows}\r\n          </TableBody>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}